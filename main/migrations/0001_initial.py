# Generated by Django 2.2 on 2023-02-02 09:27

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(default='Bbosa', max_length=10)),
                ('email', models.EmailField(db_index=True, max_length=32, unique=True)),
                ('phone', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Phone')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2023, 2, 2, 9, 27, 50, 286319))),
                ('updated_at', models.DateTimeField(default=datetime.datetime(2023, 2, 2, 9, 27, 50, 286378))),
                ('password', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(6, 'password must be atleat 6 characters long ')])),
                ('paid', models.BooleanField(default=False)),
                ('reflink', models.URLField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('username', 'email')},
            },
            managers=[
                ('objects', main.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposits', models.PositiveIntegerField(default=0)),
                ('widthdraws', models.PositiveIntegerField(default=0)),
                ('nousers', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.PositiveIntegerField(default=0)),
                ('earnings', models.PositiveIntegerField(default=0)),
                ('bonus', models.PositiveIntegerField(default=0)),
                ('owner', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETE', 'Complete'), ('FAILED', 'Failed')], default='PENDING', max_length=8)),
                ('transaction_ref', models.UUIDField(default=uuid.uuid4)),
                ('amount', models.IntegerField()),
                ('category', models.CharField(choices=[('TOP_UP', 'Top Up'), ('WITHDRAW', 'Withdraw')], default='TOP_UP', max_length=8)),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
